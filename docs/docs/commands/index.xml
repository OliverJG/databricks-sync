<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Commands on</title><link>https://databrickslabs.github.io/databricks-sync/docs/commands/</link><description>Recent content in Commands on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="https://databrickslabs.github.io/databricks-sync/docs/commands/index.xml" rel="self" type="application/rss+xml"/><item><title>Base Command</title><link>https://databrickslabs.github.io/databricks-sync/docs/commands/base_command/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://databrickslabs.github.io/databricks-sync/docs/commands/base_command/</guid><description>Base Command Databricks-sync is used by providing a command. Each command follows the same syntax but may have distinct arguments.
A command is executed by writing the name of the command followed by any required and optional arguments. Options for the base call to databricks-sync program may be passed prior to calling the command.
Command structure databricks-sync [OPTIONS] COMMAND [ARGS]... databricks-sync --help Program Options --version - Provides the version of databricks-sync.</description></item><item><title>Init</title><link>https://databrickslabs.github.io/databricks-sync/docs/commands/init/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://databrickslabs.github.io/databricks-sync/docs/commands/init/</guid><description>Init Synopsis databricks-sync init [OPTIONS] FILENAME databricks-sync init --help Description init makes a YAML configuration file in the current working directory. This file is used for the export command.
Options --debug - Debug mode. Shows full stack trace on error. --help or -h - Shows Usage and Options for init then exists. Arguments filename - A user specified name for the generated YAML configuration file. Example databricks-sync init EXPORT_CONFIG_FILENAME</description></item><item><title>Export</title><link>https://databrickslabs.github.io/databricks-sync/docs/commands/export/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://databrickslabs.github.io/databricks-sync/docs/commands/export/</guid><description>Export Synopsis databricks-sync export [--profile DATABRICKS_PROFILE_NAME default=&amp;quot;DEFAULT&amp;quot;] {-l, --local-git-path PATH | -g --git-ssh-url REPO_URL} [--branch BRANCH_NAME] -c, --config-path PATH [-k, --ssh-key-path PATH default=&amp;quot;~/.ssh/id_rsa&amp;quot;] [--dask] [--dry-run] [--debug] [--excel-report] databricks-sync export -h, --help Description export creates a snapshot of the Databricks-native objects within a Databricks workspace then saves this state to a provided Git repository.
Options --profile DATABRICKS_PROFILE_NAME - The Databricks CLI connection profile for the source workspace. For additional information, please see the Databricks Sync Setup instructions.</description></item><item><title>Import</title><link>https://databrickslabs.github.io/databricks-sync/docs/commands/import/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://databrickslabs.github.io/databricks-sync/docs/commands/import/</guid><description>Import Synopsis TF_VAR_CLOUD=&amp;quot;text&amp;quot; [TF_VAR_PASSIVE=&amp;quot;text&amp;quot;] [GIT_PYTHON_TRACE=&amp;quot;text&amp;quot;] databricks-sync import [--profile DATABRICKS_PROFILE_NAME default=&amp;quot;DEFAULT&amp;quot;] {-l, --local-git-path PATH | -g --git-ssh-url REPO_URL} [--branch BRANCH_NAME] [--revision {BRANCH | COMMIT | TAG}] [-k, --ssh-key-path] --artifact-dir PATH [--backend-file PATH] [--databricks-object-type {CLUSTER_POLICY | DBFS_FILE | NOTEBOOK | IDENTITY | INSTANCE_POOL | INSTANCE_PROFILE | SECRETS | CLUSTER | JOB}] [--plan] [--skip-refresh] [--apply] [--destroy] [--debug] databricks-sync import -h, --help Description import retrieves stored state from a git repository then applies this to the target Databricks workspace.</description></item></channel></rss>